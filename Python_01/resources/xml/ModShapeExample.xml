<?xml version="1.0"?>
<!--
Based on the Shape Demo from Real-Time Innovations
 -->

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/current/rti_dds_qos_profiles.xsd">

    <!-- Qos Library -->
    <!-- 
        https://community.rti.com/kb/configuring-qos-built-profiles

        BuiltinQosLibExp::Generic.StrictReliable    - Default in the examples
        BuiltinQosLibExp::Generic.BestEffort        - Don't care just send it
        BuiltinQosLibExp::Pattern.AlarmEvent        - Might be useful!

        BuiltinQosLibExp::Generic.AutoTuning
        BuiltinQosLibExp::Generic.BestEffort
        BuiltinQosLibExp::Generic.KeepLastReliable
        BuiltinQosLibExp::Generic.StrictReliable
        BuiltinQosLibExp::Generic.StrictReliable.HighThroughput
        BuiltinQosLibExp::Generic.StrictReliable.LowLatency
        BuiltinQosLibExp::Generic.StrictReliable.LargeData
        BuiltinQosLibExp::Generic.StrictReliable.LargeData.FastFlow
        BuiltinQosLibExp::Generic.StrictReliable.LargeData.MediumFlow
        BuiltinQosLibExp::Generic.StrictReliable.LargeData.SlowFlow

        BuiltinQosLibExp::Generic.KeepLastReliable.LargeData
        BuiltinQosLibExp::Generic.KeepLastReliable.LargeData.FastFlow
        BuiltinQosLibExp::Generic.KeepLastReliable.LargeData.MediumFlow
        BuiltinQosLibExp::Generic.KeepLastReliable.LargeData.SlowFlow
        BuiltinQosLibExp::Generic.KeepLastReliable.TransientLocal
        BuiltinQosLibExp::Generic.KeepLastReliable.Transient
        BuiltinQosLibExp::Generic.KeepLastReliable.Persistent

        BuiltinQosLibExp::Pattern.PeriodicData
        BuiltinQosLibExp::Pattern.Streaming
        BuiltinQosLibExp::Pattern.ReliableStreaming
        BuiltinQosLibExp::Pattern.Event
        BuiltinQosLibExp::Pattern.AlarmEvent
        BuiltinQosLibExp::Pattern.Status
        BuiltinQosLibExp::Pattern.AlarmStatus
        BuiltinQosLibExp::Pattern.LastValueCache

        BuiltinQosLib::Generic.ConnextMicroCompatibility
        BuiltinQosLib::Generic.OtherDDSVendorCompatibility
        BuiltinQosLib::Baseline.5.x.x
        BuiltinQosLib::Generic.Monitoring.Common
        BuiltinQosLib::Generic.Participant.LargeData
        BuiltinQosLib::Generic.Participant.LargeData.Monitoring
     -->
    <qos_library name="QosLibrary">
        <qos_profile name="DefaultProfile"
                     base_name="BuiltinQosLibExp::Generic.BestEffort"
                     is_default_qos="true">
            <domain_participant_qos>
                <participant_name>
                    <name>Connector Scratchpad</name>
                </participant_name>
            </domain_participant_qos>
        </qos_profile>
    </qos_library>

    <!-- types -->

    <types>
        <include file="./ModShapeExampleTypes.xml"/>
    </types>

    <!-- Domain Library -->
    <domain_library name="MyDomainLibrary">
        <domain name="MyDomain" domain_id="0">

            <register_type name="ShapeType" type_ref="ShapeType" />
            <topic name="Square" register_type_ref="ShapeType"/>
            <topic name="Circle" register_type_ref="ShapeType"/>

            <register_type name="ShapeTypeExtended" type_ref="ShapeTypeExtended" />
            <topic name="Polygon" register_type_ref="ShapeTypeExtended"/>
            
        </domain>
    </domain_library>

    <!-- Participant library -->
    <domain_participant_library name="MyParticipantLibrary">
    
        <!-- You can also define the reader and writer inside the same
            connector instance if you plan to use both in the same application.
        -->
        <domain_participant name="MyParticipant" domain_ref="MyDomainLibrary::MyDomain">

            <publisher name="MySquarePublisher">
                <data_writer name="MySquareWriter" topic_ref="Square" />
            </publisher>
            <subscriber name="MySquareSubscriber">
                <data_reader name="MySquareReader" topic_ref="Square" />
            </subscriber>

            <publisher name="MyCirclePublisher">
                <data_writer name="MyCircleWriter" topic_ref="Circle" />
            </publisher>
            <subscriber name="MyCircleSubscriber">
                <data_reader name="MyCircleReader" topic_ref="Circle" />
            </subscriber>

            <publisher name="PolygonPublisher">
                <data_writer name="PolygonWriter" topic_ref="Polygon" />
            </publisher>
            <subscriber name="PolygonSubscriber">
                <data_reader name="PolygonReader" topic_ref="Polygon" />
            </subscriber>

        </domain_participant>

    </domain_participant_library>
</dds>